[{"authors":["admin"],"categories":null,"content":"Dr Tom Palmer, Senior Lecturer in Biostatistics\n","date":1718815500,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1718815500,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://remlapmot.github.io/author/tom-palmer/","publishdate":"2024-06-19T16:45:00Z","relpermalink":"/author/tom-palmer/","section":"authors","summary":"Dr Tom Palmer, Senior Lecturer in Biostatistics\n","tags":null,"title":"Tom Palmer","type":"authors"},{"authors":[],"categories":["Blog"],"content":" Introduction Have you ever wanted to be able to quickly open a Data Science app, say RStudio Desktop or Positron in the current Finder window at the click of a button? We’ll see how to achieve this by creating Automator apps. Here’s a screenshot of what we’ll end up with.\nCreating the Automator apps Open Automator and select New then Application and click Choose. Then in the top left search bar enter applescript and drag and drop the Run Applescript action onto the main window.\nWe then need to enter the relevant AppleScript code for launching each app in the current Finder window. Currently, I use WezTerm for my terminal emulator, Zed as my main text editor, RStudio Desktop for most of my R/R Markdown/Quarto coding, Visual Studio Code for other text editing tasks, and I have been starting to try out Positron. My AppleScript code for each app is as follows.\nRStudio Desktop It is worth noting that RStudio automatically detects whether there is an .Rproj file in the directory and opens in project mode if one is found (note this only works if RStudio is not already open).\non run {input, parameters} tell application \u0026quot;Finder\u0026quot; set myWin to window 1 set thePath to (quoted form of POSIX path of (target of myWin as alias)) do shell script \u0026quot;/Applications/RStudio.app/Contents/MacOS/RStudio \u0026quot; \u0026amp; thePath end tell end run We can create an alternative app which specifically opens RStudio project (.Rproj) files as follows.\non run {input, parameters} tell application \u0026quot;Finder\u0026quot; try set currentFolder to (folder of window 1) as alias set workspaceFiles to (every file of currentFolder whose name extension is \u0026quot;Rproj\u0026quot;) if (count of workspaceFiles) = 0 then display dialog \u0026quot;No Rproj files found in directory.\u0026quot; else if (count of workspaceFiles) = 1 then set workspaceFile to item 1 of workspaceFiles set workspacePath to POSIX path of (workspaceFile as alias) do shell script \u0026quot;open -n -a RStudio \u0026quot; \u0026amp; quoted form of workspacePath else if (count of workspaceFiles) \u0026gt; 1 then display dialog \u0026quot;Multiple Rproj files found in directory.\u0026quot; end if on error display dialog \u0026quot;No Finder window is open.\u0026quot; end try end tell end run WezTerm on run {input, parameters} tell application \u0026quot;Finder\u0026quot; set myWin to window 1 set thePath to (quoted form of POSIX path of (target of myWin as alias)) do shell script \u0026quot;/opt/homebrew/bin/wezterm-gui start --cwd \u0026quot; \u0026amp; thePath end tell end run Zed on run {input, parameters} tell application \u0026quot;Finder\u0026quot; set myWin to window 1 set thePath to (quoted form of POSIX path of (target of myWin as alias)) do shell script \u0026quot;/usr/local/bin/zed -n \u0026quot; \u0026amp; thePath end tell end run R launched in a WezTerm terminal session on run {input, parameters} tell application \u0026quot;Finder\u0026quot; set myWin to window 1 set thePath to (quoted form of POSIX path of (target of myWin as alias)) do shell script \u0026quot;/opt/homebrew/bin/wezterm-gui start --cwd \u0026quot; \u0026amp; thePath \u0026amp; \u0026quot; -- /usr/local/bin/R\u0026quot; end tell end run Visual Studio Code and Positron First enable the ability to launch these apps with code and positron from a Terminal in each app, see here and here.\nThis script is more involved because we first check for any .code-workspace files and open one if found. My AppleScript coding is not very proficient, so there may more efficient approaches to coding this. If we didn’t explicitly open the .code-workspace file and if one is present in the directory Visual Studio Code/Positron will detect it and pop up a dialogue box asking if we want to reopen the directory as a workspace (I just prefer to skip this step).\non run {input, parameters} tell application \u0026quot;Finder\u0026quot; try set currentFolder to (folder of window 1) as alias set workspaceFiles to (every file of currentFolder whose name extension is \u0026quot;code-workspace\u0026quot;) if (count of workspaceFiles) = 0 then set folderPath to POSIX path of currentFolder do shell script \u0026quot;/usr/local/bin/positron -n \u0026quot; \u0026amp; quoted form of folderPath else if (count of workspaceFiles) = 1 then set workspaceFile to item 1 of workspaceFiles set workspacePath to POSIX path of (workspaceFile as alias) do shell script \u0026quot;/usr/local/bin/positron -n \u0026quot; \u0026amp; quoted form of workspacePath else if (count of workspaceFiles) \u0026gt; 1 then display dialog \u0026quot;Multiple code-workspace files found in directory.\u0026quot; end if on error display dialog \u0026quot;No Finder window is open.\u0026quot; end try end tell end run (For your Visual Studio Code app simply replace positron with code.)\nSaving and adding icons After adding the AppleScript code save each app. I call mine, e.g., RStudio-openhere.app.\nNext it is helpful to give each app the relevant icon. To do this in Finder bring up the Info boxes for the original app and your -openhere version by selecting each app and pressing Cmd+I. Next drag the large icon from the original app onto the small icon of your -openhere app.\nAdding the apps to the Finder toolbar Finally, we need to place shortcuts of these apps onto the Finder toolbar. To do this first hold down Cmd then drag the app from Finder onto the toolbar to the location you would like. On release the app should now be in the toolbar. (And to remove an icon from the toolbar, again hold Cmd then drag it off the toolbar.)\nSummary I have shown how to create Automator apps to open RStudio Desktop, Positron, and several other Data Science apps from the current Finder window.\n","date":1734912000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1734945300,"objectID":"3d693f5edcc755800c6dca7763995ac6","permalink":"https://remlapmot.github.io/post/2024/finder-toolbar-apps/","publishdate":"2024-12-23T00:00:00Z","relpermalink":"/post/2024/finder-toolbar-apps/","section":"post","summary":"Create Automator Apps to launch Data Science apps open in the current Finder window on macOS.","tags":["Positron","R","RStudio"],"title":"Launch RStudio, Positron, and other Data Science apps from your Finder Toolbar","type":"post"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1718815500,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1718815500,"objectID":"6d0625d33559400b014ae292bffc74e4","permalink":"https://remlapmot.github.io/talk/2024_mr/","publishdate":"2024-06-19T16:45:00Z","relpermalink":"/talk/2024_mr/","section":"talk","summary":"","tags":[],"title":"The MRC IEU R-Universe of Mendelian randomization related R packages 🚀","type":"talk"},{"authors":[],"categories":["Blog"],"content":" Introduction Have you ever typed Amazon into the Google Chrome address bar and seen the address bar indicate that it’s now searching the Amazon site? It turns out this is a feature in Google Chrome called site search shortcuts.\nWe can see what default shortcuts Chrome provides by in the Chrome address bar going to chrome://settings/searchEngines and scrolling to the Site Search section.\nFrom here we can see that we can define our own shortcuts, so let’s define some helpful ones related to R and statistics.1\nHelpful Google Chrome site search shortcuts for R and statistics METACRAN provides several amazingly useful services around CRAN.\nA shortcut for searching the METACRAN CRAN mirror on GitHub Name: CRAN mirror on GitHub Shortcut: @cran URL with %s in place of query: https://github.com/search?q=user%3Acran%20%s\u0026amp;ref=opensearch\u0026amp;type=code On the Chrome settings page click add and enter the information. To use this simply type @cran into the address bar\nand then type your search term\nHere are some other shortcuts.\nA shortcut for searching for a package description on METACRAN Name: METACRAN Shortcut: @metacran URL with %s in place of query: https://r-pkg.org/search.html/?q=%s A shortcut for searching using Rseek Name: Rseek Shortcut: @rseek URL with %s in place of query: https://rseek.org/?q=%s A shortcut for searching R-universe Name: R-universe Shortcut: @runi URL with %s in place of query: https://r-universe.dev/search/?q=%s A shortcut for searching the third edition of the Oxford Dictionary of Statistics Name: Oxford Dictionary of Statistics Shortcut: @stats URL with %s in place of query: https://www.oxfordreference.com/search?source=%2F10.1093%2Facref%2F9780199679188.001.0001%2Facref-9780199679188\u0026amp;q=%s And we could define many more.\nSummary In summary we have defined several Google Chrome site search shortcuts related to R and statistics.\nI am following an excellent blogpost by Chrome Unboxed.↩︎\n","date":1718323200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1718352900,"objectID":"a7bd2fddff2f04adaa45b1e4d2721fd8","permalink":"https://remlapmot.github.io/post/2024/chrome-site-search-shortcuts/","publishdate":"2024-06-14T00:00:00Z","relpermalink":"/post/2024/chrome-site-search-shortcuts/","section":"post","summary":"Google Chrome site search shortcuts for R and statistics to enable convenient #rstats web searching.","tags":["R","Chrome"],"title":"Supercharge your #rstats web searching in Google Chrome with Site Search Shortcuts","type":"post"},{"authors":[],"categories":["Blog"],"content":" Introduction MLwiN from the Centre for Multilevel Modelling (CMM) at the University of Bristol (disclaimer: where I also work) is a fantastic piece of software (Charlton et al. 2024). The name suggests it only works on Windows, but as we’ll find out this is very much not the case.\nHowever, in the past this was sort of true because to make it work on a Mac (or Linux machine) with an Intel processor one would need to run it using Wine.\nMore recently, CMM have cleverly made the MLwiN libraries available for other operating systems in a command line version of the program called mlnscript and an accompanying library. The files for macOS are universal binaries which means that they run natively on both Intel and Apple Silicon Macs. Let’s find out how to set this up.1\nSetting up mlnscript on an Apple Silicon Mac Obtain the installer for macOS. See the relevant download page (depending upon whether you are an academic) on the MLwiN website. On the form on the File to download dropdown menu select the mlnscript for MacOS option. This will give you the MLN.dmg installer.\nDouble click the installer. On macOS it is recommended to install the files into the /opt/mln/ directory, which you will need to create with Admin permissions, or install to another directory if you don’t have Admin permissions. Copy the 2 files mlnscript and libmln.dylib into the /opt/mln (or other) directory.\nOnce installed we can check that mlnscript and libmln.dylib are universal binaries as follows (we could also use the file command).\nlipo -archs /opt/mln/mlnscript ## x86_64 arm64 Since both architectures are listed in the output this indicates the files are universal binaries. Apple Silicon Macs will use the arm64 architecture.\nNow we need to grant the two files permission to run. To do this run the following in your Terminal.\n/opt/mln/mlnscript --version On first run, this will fail with a pop-up similar to the following.\nClick Cancel and then go into the System settings | Privacy \u0026amp; Security and scroll down and click Allow Anyway.\nThen running the version check command again you may receive another popup in which you click Open.\nAfter this the first popup will then appear but about the libmln.dylib file. Again set the security setting to Allow All.\nNow running the version check command again you should see the version number – which is currently 3.10.\n/opt/mln/mlnscript --version ## 3.10 In R we then install the R2MLwiN package from CRAN (Zhang et al. 2016).\ninstall.packages(\u0026quot;R2MLwiN\u0026quot;) This completes the setup - phew 😮!\nRunning a multilevel model For an example we could run one of the demos in the package, we can list those with the following code.\ndemo(package = \u0026quot;R2MLwiN\u0026quot;) We can run one, for example, let’s fit the random intercept model from the UserGuide02 demo.\nlibrary(R2MLwiN) # if you did not install mlnscript and libmln.dylib in /opt/mln , set: # options(MLwiN_path = \u0026quot;/path-to/mlnscript\u0026quot;) (mymodel1 \u0026lt;- runMLwiN(normexam ~ 1 + sex + (1 | student), data = tutorial)) #\u0026gt; #\u0026gt; -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*- #\u0026gt; MLwiN (version: unknown or \u0026gt;3.09) multilevel model (Normal) #\u0026gt; Estimation algorithm: IGLS Elapsed time : 0.03s #\u0026gt; Number of obs: 4059 (from total 4059) The model converged after 3 iterations. #\u0026gt; Log likelihood: -5727.9 #\u0026gt; Deviance statistic: 11455.7 #\u0026gt; --------------------------------------------------------------------------------------------------- #\u0026gt; The model formula: #\u0026gt; normexam ~ 1 + sex + (1 | student) #\u0026gt; Level 1: student #\u0026gt; --------------------------------------------------------------------------------------------------- #\u0026gt; The fixed part estimates: #\u0026gt; Coef. Std. Err. z Pr(\u0026gt;|z|) [95% Conf. Interval] #\u0026gt; Intercept -0.14035 0.02463 -5.70 1.209e-08 *** -0.18862 -0.09208 #\u0026gt; sexgirl 0.23367 0.03179 7.35 1.985e-13 *** 0.17136 0.29598 #\u0026gt; Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1 #\u0026gt; --------------------------------------------------------------------------------------------------- #\u0026gt; The random part estimates at the student level: #\u0026gt; Coef. Std. Err. #\u0026gt; var_Intercept 0.98454 0.02185 #\u0026gt; -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*- We can see the output is in several sections. The first section tells us about how mlnscript, which estimation algorithm it used, hwo long it took to fit the model, and some characteristics of the dataset. The second section tells us about the model, in this case a random intercept model. The third section is the fixed effect estimates and the associated statistical inference for them. The fourth section is the random effect variance estimates.\nAnd we can continue with our multilevel modelling as we like.\nSummary Despite having Win in its name, MLwiN is available as a command line program, mlnscript, which is available on operating systems other than Windows (and indeed with other architectures), including macOS for both Intel and Apple Silicon processors and various Linux and Unix distributions (CentOS, Debian, Fedora, FreeBSD, Rocky, and Ubuntu). This is straightforward to use from R via the R2MLwiN package.\nReferences Charlton, C., J. Rasbash, W. J. Browne, M. Healy, and B. Cameron. 2024. MLwiN Version 3.10. Bristol, UK: Centre for Multilevel Modelling, University of Bristol. https://www.bristol.ac.uk/cmm/software/mlwin/. Zhang, Z., R. M. A. Parker, C. M. J. Charlton, G. Leckie, and W. J. Browne. 2016. “R2MLwiN: A Package to Run MLwiN from Within R.” Journal of Statistical Software 72 (10): 1–43. https://doi.org/10.18637/jss.v072.i10. This post is essentially a more detailed explanation of the advice given on the MLwiN website, here and here.↩︎\n","date":1712016000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1711999080,"objectID":"169a96eedc1caf2806de1984f693831a","permalink":"https://remlapmot.github.io/post/2024/mlnscript-r2mlwin-apple-silicon/","publishdate":"2024-04-02T00:00:00Z","relpermalink":"/post/2024/mlnscript-r2mlwin-apple-silicon/","section":"post","summary":"How to run MLwiN natively on Apple Silicon Macs via R and the R2MLwiN package.","tags":["R","MLwiN"],"title":"Running MLwiN using mlnscript via the R2MLwiN R package on Apple Silicon Macs ","type":"post"},{"authors":[],"categories":["Blog"],"content":" Introduction: how to open a second instance of RStudio Desktop on macOS On macOS when RStudio Desktop is open it can be inconvenient to open a second (or third or fourth) instance of it.\nIf you left click the RStudio Desktop icon nothing happens. If you right click on the RStudio Desktop icon there is a convenient New RStudio Window. The problem with this is that by default if you have an RStudio project open the new RStudio window is also opened in that project. However, that can be overcome by opening the RStudio preference pane and in the first tab (General | Basic) deselecting the boxes relating to Restore most recently opened project at startup and Restore previousy open source documents at startup.\nAlternatively, within RStudio Desktop we could select File | Open Project… but I’ve never found that very intuitive and somehow I’ve never got used to using RStudio’s command palette. If you have several directories configured as RStudio projects (with .Rproj files) that you’ve opened before you could open those from the top right project drop down menu or double click them from within Finder.\nBut let’s say we want an even more convenient way of doing this – an icon in the dock. Thanks to this Stackoverflow answer, it turns out that in a terminal we can issue the following open command to achieve opening a new instance of RStudio Desktop (note RStudio Desktop needs to be installed in your Applications directory for this to work).\nopen -n -a RStudio.app Making an Automator app to open a new instance of RStudio Desktop macOS comes with Automator, open that from your Applications directory. Then select File | New and select Application and click Choose. Then from the left most menu select Utilities and double click Run Shell Script. In the main window on the right, leave the shell as zsh and replace the cat text in the box with the open command above.\nThen press Cmd + S or File | Save and save your application in your Applications folder. Give the app a distinct name such as RStudio-new-instance.app or whatever you prefer and then quit Automator.\nNext we would like our app to have a nice icon.1\nFirst download a nice icon from say this repo of logos kindly designed for RStudio (I chose the dark one). Then navigate to the our new app in Finder and press Cmd + I. Then drag the .icns file onto the icon in the top left corner of the info box. And tada your app will now use this icon! And you can even drag the app from Finder onto your dock from where you can simply click the icon to open as many instances of RStudio Desktop as you like.\nAnd because the new application is in our Applications directory it is found by Alfred (and hopefully Raycast).\nSummary We have created an Automator application which runs a shell script to open a new instance of RStudio Desktop. We have then given this application a new icon and we have placed this on our dock.\nI follow the approach detailed on this blog and on the README where I obtained the icon.↩︎\n","date":1711843200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1711824840,"objectID":"d5887853905327921ed84c1879a2672e","permalink":"https://remlapmot.github.io/post/2024/macos-rstudio-another/","publishdate":"2024-03-31T00:00:00Z","relpermalink":"/post/2024/macos-rstudio-another/","section":"post","summary":"A convenient way to open a new instance of RStudio Desktop on macOS.","tags":["R","RStudio","macOS"],"title":"Creating a simple Automator app to launch a new instance of RStudio Desktop on macOS","type":"post"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1706277600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1706277600,"objectID":"28ea704748e0a4f46394bb44b603e207","permalink":"https://remlapmot.github.io/talk/2024_mrcieu-r-universe/","publishdate":"2024-01-26T14:00:00Z","relpermalink":"/talk/2024_mrcieu-r-universe/","section":"talk","summary":"","tags":[],"title":"The MRC IEU 🚀 R-Universe of Mendelian randomization related R packages","type":"talk"},{"authors":[],"categories":["Blog"],"content":" My #GitHubUnwrapped 2023!\nMade with https://www.githubunwrapped.com/.\n","date":1704585600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1704621480,"objectID":"418feee6a6aa63f891e137120d893676","permalink":"https://remlapmot.github.io/post/2024/github-unwrapped-2023/","publishdate":"2024-01-07T00:00:00Z","relpermalink":"/post/2024/github-unwrapped-2023/","section":"post","summary":"My #GitHubUnwrapped 2023!","tags":["GitHub"],"title":"My #GitHubUnwrapped 2023!","type":"post"},{"authors":["Tom Palmer","Yi Liu"],"categories":null,"content":"","date":1701428400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701428400,"objectID":"019eb867a5210b668d4c3ea94c54eeee","permalink":"https://remlapmot.github.io/talk/2023_code-clinic/","publishdate":"2023-12-01T11:00:00Z","relpermalink":"/talk/2023_code-clinic/","section":"talk","summary":"","tags":[],"title":"Using Git, GitHub Desktop, and GitHub for novice and experienced users","type":"talk"},{"authors":[],"categories":["Blog"],"content":" Most proficient Stata users have come across the version command. This is an incredibly powerful command, which simply by issuing say\nversion 18 at the top of a do-file or within a program (typically in an ado-file) means that you have pretty much guaranteed your code will run in the same way when you come to run it later (most likely in a newer version of Stata). But it turns out there’s a subtle difference between issuing version in a do-file/interactively compared to within a program or ado-file.\nSeveral years ago I wrote the reffadjust package (Palmer et al. 2014) as part of some work using random effects models (Macdonald-Wallis et al. 2012). It has two programs reffadjustsim and reffadjust4nlcom which use the output of various random effects commands, including those from MLwiN, run from Stata using the user-written runmlwin command (Leckie and Charlton 2013).\nThe reffadjust package doesn’t have many users and over the years I hadn’t regularly checked if the programs were still working. But in the ado-files I had set version 13, which gave me some residual confidence that the programs might still work.\nHowever, a few years ago, when I eventually did run some test code I saw that the reffadjustsim tests were failing for MLwiN/runmlwin models. I didn’t have time to investigate further at this point, and I didn’t have any intuition whether the error resulted from a change in MLwiN, runmlwin, or Stata.\nAt the beginning of this year one of my colleagues mentioned that they were using reffadjust in their work and had observed the same error with reffadjustsim. My guilt kicked in, and I eventually found some time to investigate. I discovered that since I wrote the package, Stata processes matrix row and column stripes (essentially the row and column names) in a more advanced way. This meant that the row and column stripes for covariance elements in the e(V) matrix (the variance-covariance matrix of parameter estimates) from MLwiN/runmlwin models were being renamed when I hadn’t intended them to be, which caused the error.\nBut wait … I had specified version 13 at the top of my program, so why was this update in later versions of Stata taking effect?\nI couldn’t work it out, so I had to ask Stata Technical Support. They were kind enough to tell me that there’s an additional method of invoking the version command which controls what is known as the “user version”. There are some modifications in new versions of Stata which are exempt from the basic invocation of the version command (but only in programs and ado-files). In do-files issuing version sets both the version and the user version, however, in programs and ado-files the “user version”, is set by version #, user, and holds these additional modifications in Stata to the required version.\nNaturally, this is explained in the version helpfile and manual entry, which I admit I had not read until this point. Hence, simply editing the top of my program to\nversion 13 version 13, user fixed my error. So in a program or ado-file, we require both lines, whereas in a do-file we’d only require version 13.\nWe can see the different operation of version by the following short example.\n/* Do-file/interactive code to set both the version and the user version */ version 13 display c(version), c(userversion), c(stata_version) // 13 13 17 /* Ado-file/program code to set both the version and the user version */ program mytest version 13 display c(version), c(userversion), c(stata_version) version 13, user display c(version), c(userversion), c(stata_version) end mytest // 13 17 17 // 13 13 17 In summary, my reffadjustsim command works again for MLwiN/runmlwin models. The updated version is available from its GitHub repo. And if you ever need fuller reproducibility in your Stata ado-file or program remember to set both the version and the user version.\nReferences Leckie, George, and Chris Charlton. 2013. “runmlwin: A Program to Run the MLwiN Multilevel Modeling Software from within Stata.” Journal of Statistical Software 52 (11): 1–40. https://doi.org/10.18637/jss.v052.i11. Macdonald-Wallis, Corrie, Debbie A. Lawlor, Tom Palmer, and Kate Tilling. 2012. “Multivariate Multilevel Spline Models for Parallel Growth Processes: Application to Weight and Mean Arterial Pressure in Pregnancy.” Statistics in Medicine 31 (26): 3147–64. https://doi.org/doi.org/10.1002/sim.5385. Palmer, Tom M., Corrie M. Macdonald-Wallis, Debbie A. Lawlor, and Kate Tilling. 2014. “Estimating adjusted associations between random effects from multilevel models: The reffadjust package.” The Stata Journal 14 (1): 119–40. https://doi.org/10.1177/1536867X1401400109. ","date":1692835200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1694375009,"objectID":"04b7ba3b20d3a754639f2203884cf925","permalink":"https://remlapmot.github.io/post/2023/stata-reproducibility/","publishdate":"2023-08-24T00:00:00Z","relpermalink":"/post/2023/stata-reproducibility/","section":"post","summary":"For fuller reproducibility in Stata ado-files and programs set both the version and the user version.","tags":["Stata"],"title":"Fuller reproducibility in Stata ado-files and programs: setting the version and user version","type":"post"},{"authors":["Tom Palmer","Hannah Sallis","Kate Tilling","George Davey Smith","Marcus Munafò"],"categories":null,"content":"","date":1684760400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1684760400,"objectID":"1d08b1301162c7d3b7e2421f4ebf6899","permalink":"https://remlapmot.github.io/talk/2023_reverse-mr/","publishdate":"2023-05-22T13:00:00Z","relpermalink":"/talk/2023_reverse-mr/","section":"talk","summary":"","tags":[],"title":"Using allele scores to identify confounding by reverse causation: Studies of alcohol consumption as an exemplar","type":"talk"},{"authors":[],"categories":["Blog"],"content":" My #GitHubUnwrapped 2022!\nMade with https://www.githubunwrapped.com/.\n","date":1673049600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673093444,"objectID":"0f5e47dc740a617353baa753578b6e02","permalink":"https://remlapmot.github.io/post/2023/github-unwrapped-2022/","publishdate":"2023-01-07T00:00:00Z","relpermalink":"/post/2023/github-unwrapped-2022/","section":"post","summary":"My #GitHubUnwrapped 2022!","tags":["GitHub"],"title":"My #GitHubUnwrapped 2022!","type":"post"},{"authors":[],"categories":["Blog"],"content":" Introduction CRAN is a fantastic resource, in particular because it provides binary packages for Windows and macOS (for both Intel and Apple Silicon Macs). Because there are so many Linux distributions CRAN does not provide binary packages for Linux. Therefore, installing R packages on Linux can be slow because the bundled source packages need to be built on users machines.\nBut let’s install a package from the Posit (formerly RStudio) Package Manager on Ubuntu Linux. Woah! Something magical just happened, we installed a binary R package on Linux! How did that happen, let’s find out.1\nBuilding bundled source and binary packages I will use an example of one of my own packages OneSampleMR. I am running RStudio server on Ubuntu Linux, Focal Fossa through Windows Subsystem for Linux.\nThe package sources are in a Git repository hosted on GitHub, here. There is an .Rproj file, which we open in RStudio as a project.\nTo build an R package we require all of its dependency packages are installed, so we install those with devtools::install_dev_deps() and if your package requires any system libraries those must be installed too.\nThe Build pane gives us two convenient options, which will build either the bundled source package or binary package through calls to devtools::build(). Clicking on both in turn we see the following. The bundled source package has been built as OneSampleMR_0.1.2.tar.gz and the binary package has been built as OneSampleMR_0.1.2_R_x86_64-pc-linux-gnu.tar.gz. Both files are in the directory above the project.\nWe can achieve the same output by making direct calls to R CMD build and R CMD install --build in a shell if preferred. We can test that these install as follows.\nCRAN structure for bundled source package files In two excellent blog posts Marks Sellors describes how to make a CRAN-like repository.2 There is also the miniCRAN package to help do this, but we don’t need to use this for the following explanation.\nTo host bundled source packages, such as our OneSampleMR_0.1.2.tar.gz file, we require the following directory structure (noting that the latest directory is optional, but allows us to add snapshot directories if we wanted to). /mycran └── latest └── src └── contrib └── 4.3.0 └── Recommended Specifically, we place the {package}_{version}.tar.gz files into the .../src/contrib directory. In that directory we then run\ntools::write_PACKAGES(type = \u0026quot;source\u0026quot;) which generates 3 additional files (PACKAGES, PACKAGES.gz, and PACKAGES.rds) which R will use to query what packages are available in our repository when its served on the web.\nAdding Windows and macOS binary R packages We saw above how to build a binary Linux package. The same process, when repeated on Windows will generate a file called {package}_{version}.zip and {package}_{version}.tgz on macOS (on Macs with both Intel and Apple Silicon processors).\nAssuming that we have some of these files we need to know where to put them. Since CRAN distributes binary packages for Windows and macOS we follow their directory structure, which is as follows. /mycran └── latest ├── bin │ ├── macosx │ │ ├── big-sur-arm64 │ │ │ └── contrib │ │ │ └── 4.2 │ │ └── contrib │ │ └── 4.2 │ └── windows │ └── contrib │ └── 4.2 └── src └── contrib └── 4.3.0 └── Recommended Noting that the current version of R is 4.2.2 and that the relevant directory name with the minor version number changes when R’s current minor version number changes, we place\nmacOS arm64 binary packages (for Macs with Apple Silicon processors) into the .../bin/macosx/big-sur-arm64/contrib/4.2/ directory macOS x86_64 binary packages (for Macs with Intel processors) into the .../bin/macosx/contrib/4.2/ directory, and Windows binary packages into the .../bin/windows/contrib/4.2/ directory. We then run tools::write_PACKAGES(type = \"mac.binary\") (changing to type = \"win.binary\" as required) in each of these directories to generate the 3 PACKAGES files.\nWe can confirm this directory structure using the contrib.url() function (the last command below was run on an Apple Silicon Mac).\ncontrib.url(\u0026quot;\u0026quot;, type = \u0026quot;source\u0026quot;) ## [1] \u0026quot;/src/contrib\u0026quot; contrib.url(\u0026quot;\u0026quot;, type = \u0026quot;win.binary\u0026quot;) ## [1] \u0026quot;/bin/windows/contrib/4.2\u0026quot; contrib.url(\u0026quot;\u0026quot;, type = \u0026quot;mac.binary\u0026quot;) ## [1] \u0026quot;/bin/macosx/contrib/4.2\u0026quot; contrib.url(\u0026quot;\u0026quot;, type = \u0026quot;binary\u0026quot;) ## [1] \u0026quot;/bin/macosx/big-sur-arm64/contrib/4.2\u0026quot; And they are also listed in the R Installation and Administration manual.3\nOn Apple Silicon Macs the big-sur-arm64 filepath corresponds to the end of .Platform$pkgType.\n.Platform$pkgType ## [1] \u0026quot;mac.binary.big-sur-arm64\u0026quot; Where to store and how to name Linux binary R packages? CRAN does not distribute Linux binary packages and so there is no directory structure from them to copy.\nHowever both the Posit Package Manager and the R4Pi project achieve this in a very clever way.4\nWe saw above that on Linux bundled source packages have filenames of the form {package}_{version}.tar.gz whereas the binary package filenames are of the form {package}_{version}_R_x86_64-pc-linux-gnu.tar.gz (the text after {package}_{version}_ may be different depending on your machine and distro).\nTo distribute the Linux binary packages we create a parallel directory structure, which takes the same form as for the bundled source packages. In the case of Ubuntu Focal Fossa the Posit Package Manager uses __linux__/focal/latest/src/contrib.\nThey then rename the {package}_{version}_R_x86_64-pc-linux-gnu.tar.gz files to the same form as the bundled source package files, i.e., to {package}_{version}.tar.gz. And they put them in this new src/contrib directory.\nThe structure of our CRAN-like repository (well in fact our 2 parallel repositories) is now. /mycran ├── __linux__ │ └── focal │ └── latest │ └── src │ └── contrib │ └── 4.3.0 │ └── Recommended └── latest ├── bin │ ├── macosx │ │ ├── big-sur-arm64 │ │ │ └── contrib │ │ │ └── 4.2 │ │ └── contrib │ │ └── 4.2 │ └── windows │ └── contrib │ └── 4.2 └── src └── contrib └── 4.3.0 └── Recommended We then run\ntools::write_PACKAGES(type = \u0026quot;source\u0026quot;) in the .../__linux__/distro-name/src/contrib directory for each Linux distribution to generate the PACKAGES files.\nOnce this directory structure is served we can set our repository in R to .../__linux__/focal/latest and R will find the binary package {package}_{version}.tar.gz files in the ...__linux__/focal/src/contrib/ directory, as per the first figure in this post.\nNote that the {package}_{version}.tar.gz files within __linux__/focal/latest/src/contrib do not all have to be of binary packages. They can be a mix of bundled source and binary packages, which is helpful if you haven’t had time to build all your binary package files.\nWe can also confirm that on Ubuntu Focal Fossa\n.Platform$pkgType ## [1] \u0026quot;source\u0026quot; therefore, on Linux, utils:::resolvePkgType() always returns \"source\". Hence, on Linux, contrib.url() always returns /src/contrib regardless of its type argument.\nTesting your CRAN-like repositories locally You can either run a local web server or use the file://... URL notation as your repos global options setting (set with option(repos = ...) or as the repos argument to install.packages()).\nHere’s a screenshot of installing a binary package on Ubuntu Focal Fossa. Summary We have taken a look at the structure of a CRAN-like repository and built bundled source and binary package files. We saw that the trick for distributing Linux binary packages is to make a parallel directory with the same structure as that required for bundled source packages and that we need to rename the binary package files to have the same filename format as the bundled source package files.\nNote that there are other approaches to distributing binary R packages on Linux, see https://cran.r-project.org/bin/linux/ and links therein, https://eddelbuettel.github.io/r2u/, and https://enchufa2.github.io/bspm/↩︎\nhttps://blog.sellorm.com/2019/03/29/lifting-the-lid-on-cran/ and https://blog.sellorm.com/2019/03/30/build-your-own-cran-like-repo/↩︎\nSee https://cran.r-project.org/doc/manuals/R-admin.html#Setting-up-a-package-repository.↩︎\nSee https://packagemanager.rstudio.com/client/#/repos/2/overview and https://pkgs.r4pi.org/↩︎\n","date":1669766400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1669820821,"objectID":"3ee22672fd70b281953594c6658aee65","permalink":"https://remlapmot.github.io/post/2022/make-linux-binary-cran-like-repo/","publishdate":"2022-11-30T00:00:00Z","relpermalink":"/post/2022/make-linux-binary-cran-like-repo/","section":"post","summary":"Make your own CRAN-like repository serving not only bundled source packages and Windows and macOS binary packages but also Linux binary packages.","tags":["R","CRAN","Linux","Ubuntu"],"title":"Make your own CRAN-like repository with Linux binary R packages","type":"post"},{"authors":["Tom Palmer","Elinor Jones"],"categories":null,"content":"","date":1656519600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656519600,"objectID":"630eb273dca0dc3304b3e911ef137cfe","permalink":"https://remlapmot.github.io/talk/2022_horizons-in-stem/","publishdate":"2022-06-29T16:20:00Z","relpermalink":"/talk/2022_horizons-in-stem/","section":"talk","summary":"","tags":[],"title":"A review of group-based methods for teaching statistics in higher education","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1653046200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653046200,"objectID":"66f0e9691c52b871ca26cc7907e20160","permalink":"https://remlapmot.github.io/talk/2022_check-error/","publishdate":"2022-05-20T11:30:00Z","relpermalink":"/talk/2022_check-error/","section":"talk","summary":"","tags":[],"title":"Investigating and fixing a new CRAN check error in my OneSampleMR package","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1642683600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1642683600,"objectID":"e330de6527b218005bd6af0839d51b32","permalink":"https://remlapmot.github.io/talk/2022_stats-discussion/","publishdate":"2022-01-20T13:00:00Z","relpermalink":"/talk/2022_stats-discussion/","section":"talk","summary":"","tags":[],"title":"R and Stata packages for one-sample Mendelian randomization analyses: OneSampleMR and ivonesamplemr","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1610974800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610974800,"objectID":"4e16a7a1635547f959fd2de9b27d248f","permalink":"https://remlapmot.github.io/talk/2021_stats-discussion/","publishdate":"2021-01-18T13:00:00Z","relpermalink":"/talk/2021_stats-discussion/","section":"talk","summary":"","tags":[],"title":"Parameter collapsibility and noncollapsibility in statistical models: what you need to know","type":"talk"},{"authors":["Tom Palmer","Roland Ramsahai","Vanessa Didelez","Nuala Sheehan"],"categories":null,"content":"","date":1563321600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563321600,"objectID":"05bd48638116e66a697c25e89cbecc78","permalink":"https://remlapmot.github.io/talk/2019_mr/","publishdate":"2019-07-17T00:00:00Z","relpermalink":"/talk/2019_mr/","section":"talk","summary":"","tags":[],"title":"bpbounds: R package and web app","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1543924800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543924800,"objectID":"b2e538200df75db5e13789701d887c29","permalink":"https://remlapmot.github.io/talk/2018_keele/","publishdate":"2018-12-04T12:00:00Z","relpermalink":"/talk/2018_keele/","section":"talk","summary":"","tags":[],"title":"Directed acyclic graphs: what are they and what are they useful for?","type":"talk"},{"authors":["Tom Palmer","Wes Spiller","Neil Davies"],"categories":null,"content":"","date":1504828800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1504828800,"objectID":"53c62687f981064d0ff6ecdc1cb1ed1c","permalink":"https://remlapmot.github.io/talk/2017_stata/","publishdate":"2017-09-08T00:00:00Z","relpermalink":"/talk/2017_stata/","section":"talk","summary":"","tags":[],"title":"mrrobust: A Stata package for MR-Egger regression type analyses","type":"talk"},{"authors":["Tom Palmer","Wes Spiller","Neil Davies"],"categories":null,"content":"","date":1499864400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1499864400,"objectID":"17bec1eb4c731bc6dd720663005cbf87","permalink":"https://remlapmot.github.io/talk/2017_mr/","publishdate":"2017-07-12T13:00:00Z","relpermalink":"/talk/2017_mr/","section":"talk","summary":"","tags":[],"title":"mrrobust: A Stata package implementing MR-Egger regression type analyses","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1492693200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1492693200,"objectID":"49708294c5285bfb89691b829c693cd5","permalink":"https://remlapmot.github.io/talk/2017_leibniz/","publishdate":"2017-04-20T13:00:00Z","relpermalink":"/talk/2017_leibniz/","section":"talk","summary":"","tags":[],"title":"Corrected standard errors for two-stage residual inclusion estimators and a Stata package for MR-Egger regression type analyses","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1488888000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1488888000,"objectID":"746670f346d1dae7e7f0821b9d6a2eab","permalink":"https://remlapmot.github.io/talk/2017_lstm/","publishdate":"2017-03-07T12:00:00Z","relpermalink":"/talk/2017_lstm/","section":"talk","summary":"","tags":[],"title":"Some topics from Mendelian randomization","type":"talk"},{"authors":["Tom Palmer","Dave Evans","George Davey Smith"],"categories":null,"content":"","date":1460635200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1460635200,"objectID":"062d0046ff5406dd4c1819530a4eeef2","permalink":"https://remlapmot.github.io/talk/2016_ukcim/","publishdate":"2016-04-14T12:00:00Z","relpermalink":"/talk/2016_ukcim/","section":"talk","summary":"","tags":[],"title":"Meta-analytic structural equation modelling: Application to Mendelian randomization studies","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1440680400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1440680400,"objectID":"a297c976705115f0bcdc21a1b86a778b","permalink":"https://remlapmot.github.io/talk/2015_iscb/","publishdate":"2015-08-27T13:00:00Z","relpermalink":"/talk/2015_iscb/","section":"talk","summary":"","tags":[],"title":"Fitting fixed and random effects meta-analysis models using structural equation models","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1434978000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1434978000,"objectID":"664ad1564f8ff911029217990d970350","permalink":"https://remlapmot.github.io/talk/2015_mr/","publishdate":"2015-06-22T13:00:00Z","relpermalink":"/talk/2015_mr/","section":"talk","summary":"","tags":[],"title":"Corrections to Probit and logistic control function estimator standard errors for marginal parameters","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1410264000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1410264000,"objectID":"89b312f01ab23441702ac07b06799b78","permalink":"https://remlapmot.github.io/talk/2014_ieu/","publishdate":"2014-09-09T12:00:00Z","relpermalink":"/talk/2014_ieu/","section":"talk","summary":"","tags":[],"title":"Lack of identification in structural mean models and multiple paired comparisons for investigating pleiotropy","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1394629200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1394629200,"objectID":"1c208b1b7d389e69ac3dff96d131ec32","permalink":"https://remlapmot.github.io/talk/2014_bk/","publishdate":"2014-03-12T13:00:00Z","relpermalink":"/talk/2014_bk/","section":"talk","summary":"","tags":[],"title":"Generalised method of moments estimation of mediation models and structural mean models","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1383840000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1383840000,"objectID":"f8aa98485b23b2a893b3ae160d20cf6a","permalink":"https://remlapmot.github.io/talk/2013_rss/","publishdate":"2013-11-07T16:00:00Z","relpermalink":"/talk/2013_rss/","section":"talk","summary":"","tags":[],"title":"Topics in instrumental variable estimation: structural mean models and bounds","type":"talk"},{"authors":["Tom Palmer","Dave Evans","George Davey Smith"],"categories":null,"content":"","date":1377522000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1377522000,"objectID":"1e8b452cb72e186fcb78c0405da09544","permalink":"https://remlapmot.github.io/talk/2013_iscb/","publishdate":"2013-08-26T13:00:00Z","relpermalink":"/talk/2013_iscb/","section":"talk","summary":"","tags":[],"title":"Strengthening Mendelian randomization through utilizing multiple independent paired combinations of genetic variants to evaluate potential pleiotropy","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1369933200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1369933200,"objectID":"76e5d92113ab9ac7672d0f2d602c9ac9","permalink":"https://remlapmot.github.io/talk/2013_crism/","publishdate":"2013-05-30T17:00:00Z","relpermalink":"/talk/2013_crism/","section":"talk","summary":"","tags":[],"title":"Topics in instrumental variable estimation: structural mean models and bounds","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1368608400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1368608400,"objectID":"ca6e578cd9390a04b1e5e264cc83ada9","permalink":"https://remlapmot.github.io/talk/2013_ukcim/","publishdate":"2013-05-15T09:00:00Z","relpermalink":"/talk/2013_ukcim/","section":"talk","summary":"","tags":[],"title":"Generalised method of moments estimation of mediation models and structural mean models","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1328101200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1328101200,"objectID":"5b1f26ad46eee00834dab81aec0e5cbc","permalink":"https://remlapmot.github.io/talk/2012_gottingen/","publishdate":"2012-02-01T13:00:00Z","relpermalink":"/talk/2012_gottingen/","section":"talk","summary":"","tags":[],"title":"Topics in instrumental variable estimation: structural mean models and bounds","type":"talk"},{"authors":["Tom Palmer","Roger Harbord","Paul Clarke","Frank Windmeijer"],"categories":null,"content":"","date":1316044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1316044800,"objectID":"b4e40be8e1a07e2bf6c3f7c8156f9623","permalink":"https://remlapmot.github.io/talk/2011_stata/","publishdate":"2011-09-15T00:00:00Z","relpermalink":"/talk/2011_stata/","section":"talk","summary":"","tags":[],"title":"Generalised method of moments estimation of structural mean models","type":"talk"},{"authors":["Tom Palmer","Paul Clarke","Frank Windmeijer"],"categories":null,"content":"","date":1316005200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1316005200,"objectID":"0683b828f11eb1e89d110989e4fc1d7c","permalink":"https://remlapmot.github.io/talk/2011_lshtm/","publishdate":"2011-09-14T13:00:00Z","relpermalink":"/talk/2011_lshtm/","section":"talk","summary":"","tags":[],"title":"Estimation using structural mean models with multiple instruments","type":"talk"},{"authors":["Tom Palmer","Paul Clarke","Frank Windmeijer"],"categories":null,"content":"","date":1314104400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1314104400,"objectID":"97afa6e4c5228ee3233956da8303b854","permalink":"https://remlapmot.github.io/talk/2011_iscb/","publishdate":"2011-08-23T13:00:00Z","relpermalink":"/talk/2011_iscb/","section":"talk","summary":"","tags":[],"title":"Generalised method of moments estimation of structural mean models","type":"talk"},{"authors":["Tom Palmer","Paul Clarke","Frank Windmeijer"],"categories":null,"content":"","date":1306414800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1306414800,"objectID":"91330ac6fb5e5b8d93f00807f6aee599","permalink":"https://remlapmot.github.io/talk/2011_rss/","publishdate":"2011-05-26T13:00:00Z","relpermalink":"/talk/2011_rss/","section":"talk","summary":"","tags":[],"title":"Estimation of structural mean models with multiple instruments","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1297353600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1297353600,"objectID":"b9ed947a318925c834648a2d71907156","permalink":"https://remlapmot.github.io/talk/2011_rss-avon/","publishdate":"2011-02-10T16:00:00Z","relpermalink":"/talk/2011_rss-avon/","section":"talk","summary":"","tags":[],"title":"Mendelian randomization: using genotypes as instrumental variables in epidemiological studies","type":"talk"},{"authors":["Tom Palmer","Dave Evans","George Davey Smith"],"categories":null,"content":"","date":1284555600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1284555600,"objectID":"573c1b640964d8a32bcf50742b4f1248","permalink":"https://remlapmot.github.io/talk/2010_rss/","publishdate":"2010-09-15T13:00:00Z","relpermalink":"/talk/2010_rss/","section":"talk","summary":"","tags":[],"title":"Using multiple independent combinations of genetic variants to strengthen causal inference in Mendelian randomization studies: height and lung function as an example","type":"talk"},{"authors":["Tom Palmer","Roger Harbord","Vanessa Didelez","Nuala Sheehan","Debbie Lawlor","Jonathan Sterne"],"categories":null,"content":"","date":1283173200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1283173200,"objectID":"95f645b52cb29d2c1f4452f57909fbc3","permalink":"https://remlapmot.github.io/talk/2010_iscb/","publishdate":"2010-08-30T13:00:00Z","relpermalink":"/talk/2010_iscb/","section":"talk","summary":"","tags":[],"title":"Instrumental variable estimation of the causal risk ratio in cohorts","type":"talk"},{"authors":["Tom Palmer"],"categories":null,"content":"","date":1258200000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1258200000,"objectID":"a0b190b972352f58ce449e9ddff3ce94","permalink":"https://remlapmot.github.io/talk/2009_ghent/","publishdate":"2009-11-14T12:00:00Z","relpermalink":"/talk/2009_ghent/","section":"talk","summary":"","tags":[],"title":"Including multiple instrumental variables in Mendelian randomization analyses","type":"talk"},{"authors":["Tom Palmer","Jaime Peters","Alex Sutton","Santiago Moreno"],"categories":null,"content":"","date":1252674000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1252674000,"objectID":"797637612539dd70359963e193419583","permalink":"https://remlapmot.github.io/talk/2009_stata/","publishdate":"2009-09-11T13:00:00Z","relpermalink":"/talk/2009_stata/","section":"talk","summary":"","tags":[],"title":"Contour enhanced funnel plots for meta-analysis","type":"talk"},{"authors":["Tom Palmer","Debbie Lawlor","Jonathan Sterne"],"categories":null,"content":"","date":1251291600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1251291600,"objectID":"415d132f4e22faafad91cae810e75983","permalink":"https://remlapmot.github.io/talk/2009_iscb/","publishdate":"2009-08-26T13:00:00Z","relpermalink":"/talk/2009_iscb/","section":"talk","summary":"","tags":[],"title":"Including multiple instrumental variables in Mendelian randomization analyses","type":"talk"},{"authors":["Tom Palmer","John Thompson","Santiago Moreno"],"categories":null,"content":"","date":1189429200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1189429200,"objectID":"c35c97fd61c7b31e4a455c915c365f15","permalink":"https://remlapmot.github.io/talk/2007_stata/","publishdate":"2007-09-10T13:00:00Z","relpermalink":"/talk/2007_stata/","section":"talk","summary":"","tags":[],"title":"Performing Bayesian analysis in Stata using WinBUGS","type":"talk"},{"authors":["Tom Palmer","Paul Burton","John Thompson","Martin Tobin"],"categories":null,"content":"","date":1189209600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1189209600,"objectID":"c88d63e0da9ec403ffb5970e6ccaacfd","permalink":"https://remlapmot.github.io/talk/2007_iges/","publishdate":"2007-09-08T00:00:00Z","relpermalink":"/talk/2007_iges/","section":"talk","summary":"","tags":[],"title":"An adjusted instrumental-variable model for Mendelian randomization","type":"talk"},{"authors":["Tom Palmer","John Thompson","Martin Tobin"],"categories":null,"content":"","date":1185973200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1185973200,"objectID":"f7e2013b7239ef24b43e1bc5f33bd485","permalink":"https://remlapmot.github.io/talk/2007_iscb/","publishdate":"2007-08-01T13:00:00Z","relpermalink":"/talk/2007_iscb/","section":"talk","summary":"","tags":[],"title":"Meta-analysis of Mendelian randomization studies","type":"talk"},{"authors":["Tom Palmer","John Thompson","Martin Tobin"],"categories":null,"content":"","date":1176382800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1176382800,"objectID":"8e94b2c5209a287174d6f4a560079ff7","permalink":"https://remlapmot.github.io/talk/2007_ysm/","publishdate":"2007-04-12T13:00:00Z","relpermalink":"/talk/2007_ysm/","section":"talk","summary":"","tags":[],"title":"Meta-analysis of Mendelian randomization studies","type":"talk"},{"authors":["Tom Palmer","John Thompson","Martin Tobin"],"categories":null,"content":"","date":1156957200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1156957200,"objectID":"19d5f0cfc4234677497622b378c8e379","permalink":"https://remlapmot.github.io/talk/2006_iscb/","publishdate":"2006-08-30T17:00:00Z","relpermalink":"/talk/2006_iscb/","section":"talk","summary":"","tags":[],"title":"Incorporating measures of study similarity in a meta-analysis","type":"talk"}]